import org.cghio.cantonese.romanization.Pinyin2Hanzi;
import static org.junit.Assert.assertArrayEquals;

public class test_pinyin2hanzi_2 {

  private static int[] p2h(String pinyin) {
    return Pinyin2Hanzi.fromPinyin(pinyin);
  }

  public static void main(String[] args) {
    long startTime = System.currentTimeMillis();
    assertArrayEquals(new int[]{ 26354 }, p2h("kuk"));
    assertArrayEquals(new int[]{ 31351, 31353, 31406 }, p2h("kung"));
    assertArrayEquals(new int[]{ 20361, 22446, 22840, 25358, 33007, 35074, 35463, 36328 }, p2h("kwa"));
    assertArrayEquals(new int[]{ 26694, 30518, 31568, 36891 }, p2h("kwaang"));
    assertArrayEquals(new int[]{ 20111, 23916, 24871, 25658, 25884, 30328, 30420, 31397, 31418, 33909, 34407, 35215, 35268, 36917, 39319 }, p2h("kwai"));
    assertArrayEquals(new int[]{ 22256, 22372, 25414, 26118, 31384, 32676, 33740, 35033, 36645, 36746, 37653, 38175 }, p2h("kwan"));
    assertArrayEquals(new int[]{ 37846, 39601, 39606, 39610, 39616, 39617, 39618, 39627, 39628, 39633, 39637, 39638, 39715, 40379, 40536 }, p2h("kwat"));
    assertArrayEquals(new int[]{ 34402, 38553 }, p2h("kwik"));
    assertArrayEquals(new int[]{ 26103, 26336, 30719, 31014 }, p2h("kwong"));
    assertArrayEquals(new int[]{ 21068, 21862, 21895, 32581 }, p2h("la"));
    assertArrayEquals(new int[]{ 25289, 28712, 36084, 36182 }, p2h("laai"));
    assertArrayEquals(new int[]{ 23146, 25597, 25900, 27099, 27323, 28389, 28651, 31726, 31811, 32412, 32518, 32625, 33328, 33382, 34013, 34253, 35124, 35172, 35261, 35272 }, p2h("laam"));
    assertArrayEquals(new int[]{ 20848, 25042, 25078, 25318, 25876, 26639, 27396, 28572, 28734, 28866, 29211, 34349, 35733, 35888, 37997, 38247, 38348, 38417 }, p2h("laan"));
    assertArrayEquals(new int[]{ 20919 }, p2h("laang"));
    assertArrayEquals(new int[]{ 22403, 33098, 33240, 34593, 34847 }, p2h("laap"));
    assertArrayEquals(new int[]{ 30220, 36771, 37003 }, p2h("laat"));
    assertArrayEquals(new int[]{ 20029, 20363, 20458, 20791, 21169, 21237, 21385, 21426, 29313, 31036, 31150, 31901, 33620, 39530, 39562, 40599, 40654, 40679 }, p2h("lai"));
    assertArrayEquals(new int[]{ 20162, 21202, 22046, 32907 }, p2h("lak"));
    assertArrayEquals(new int[]{ 20020, 20955, 20956, 21833, 26519, 28107, 29747, 33256, 38678 }, p2h("lam"));
    assertArrayEquals(new int[]{ 20985, 31435, 31520, 31890 }, p2h("lap"));
    assertArrayEquals(new int[]{ 29993 }, p2h("lat"));
    assertArrayEquals(new int[]{ 20603, 20674, 21016, 21129, 21949, 22029, 23044, 23105, 25602, 25695, 26611, 27004, 27060, 27155, 27969, 28316, 28431, 29705, 30041, 30244, 30827, 31699, 31757, 32807, 32812, 37798, 37860, 38210, 38223, 38475, 39230, 39311, 39470, 39581, 39621, 39631 }, p2h("lau"));
    assertArrayEquals(new int[]{ 21671 }, p2h("le"));
    assertArrayEquals(new int[]{ 20432, 20442, 20955, 20956, 21033, 21400, 21519, 21737, 21937, 23052, 23653, 26446, 26792, 28435, 29432, 29702, 29827, 31163, 31729, 31852, 32633, 33673, 35041, 35981, 37324, 37616, 38146, 38626, 39881, 40100 }, p2h("lei"));
    assertArrayEquals(new int[]{ 21499 }, p2h("lek"));
    assertArrayEquals(new int[]{ 38739, 38746, 39914, 40110 }, p2h("leng"));
    assertArrayEquals(new int[]{ 25504, 30053 }, p2h("leuk"));
    assertArrayEquals(new int[]{ 20004, 20142, 20457, 20486, 20841, 20937, 26753, 27153, 28092, 31918, 31921, 31975, 33391, 35538, 35845, 36635, 36742, 37327 }, p2h("leung"));
    assertArrayEquals(new int[]{ 21147, 21382, 21590, 22182, 27511, 27813, 28701 }, p2h("lik"));
    assertArrayEquals(new int[]{ 24088, 24265, 25947, 25986, 27539, 27566, 33080, 33225, 37934, 38256 }, p2h("lim"));
    assertArrayEquals(new int[]{ 24604, 24976, 25781, 25862, 28063, 28451, 28860, 29001, 32244, 32451, 33714, 34030, 36830, 36899, 37832, 38142 }, p2h("lin"));
    assertArrayEquals(new int[]{ 20196, 20278, 20940, 21478, 21604, 23725, 23994, 25294, 26865, 26974, 28789, 29618, 32666, 32838, 33777, 37428, 38083, 38517, 38646, 38728, 38936, 39046, 40801, 40836 }, p2h("ling"));
    assertArrayEquals(new int[]{ 25419, 29454, 29557 }, p2h("lip"));
    assertArrayEquals(new int[]{ 20925, 21015, 28872, 35010 }, p2h("lit"));
    assertArrayEquals(new int[]{ 20102, 20698, 22073, 23525, 24278, 25730, 25769, 26009, 29134, 30103, 30274, 32842, 36797, 36988, 37333, 37904, 38028, 38243 }, p2h("liu"));
    assertArrayEquals(new int[]{ 20332, 21171, 21214, 21346, 21348, 21792, 22062, 22108, 22165, 23013, 23810, 23959, 24208, 24300, 25438, 25523, 25736, 25796, 27257, 27347, 28061, 28510, 28551, 28809, 29200, 29282, 30184, 30278, 30439, 32769, 32802, 33339, 33387, 33446, 34310, 34383, 34396, 36034, 36162, 36335, 37536, 37906, 38097, 38137, 38245, 38706, 39025, 39045, 39522, 39540, 39791, 40056, 40065, 40072, 40442, 40557, 40565 }, p2h("lo"));
    assertArrayEquals(new int[]{ 20526, 21679, 22217, 28518, 31657, 31854, 32599, 32645, 33821, 34367, 34746, 35064, 36923, 37007, 37837, 38012, 38179, 38233 }, p2h("loh"));
    assertArrayEquals(new int[]{ 20358, 24469, 24480, 26469, 30544, 30558, 32786, 33713, 33802 }, p2h("loi"));
    assertArrayEquals(new int[]{ 20048, 27138, 27931, 28865, 28889, 29197, 32097, 32476, 33853, 35977, 37226, 37499, 38124, 39409, 39558 }, p2h("lok"));
    assertArrayEquals(new int[]{ 21879, 24266, 26238, 26391, 27028, 28010, 29436, 29701, 34690, 37070 }, p2h("long"));
    assertArrayEquals(new int[]{ 20081, 20098, 23048, 23372, 23402, 23423, 23782, 24018, 24651, 25088, 25371, 25891, 28390, 28772, 32852, 32879 }, p2h("luen"));
    assertArrayEquals(new int[]{ 21155 }, p2h("luet"));
    assertArrayEquals(new int[]{ 20387, 20406, 20769, 21525, 21570, 21811, 22418, 22744, 23649, 23650, 24942, 25150, 25794, 26053, 27882, 28122, 28388, 28670, 30922, 31867, 32047, 32311, 32533, 32696, 34174, 34385, 35023, 35041, 37324, 37569, 37939, 38109, 38253, 38647, 39006, 39486, 39585 }, p2h("lui"));
    assertArrayEquals(new int[]{ 20845, 24405, 25134, 27695, 30860, 31103, 31108, 32160, 32511, 37636, 38470, 38520, 40575, 40595 }, p2h("luk"));
    assertArrayEquals(new int[]{ 20177, 20262, 20374, 20523, 21365, 21533, 25249, 25476, 27814, 28138, 30967, 32184, 32438, 35542, 35770, 36650, 36692, 36718, 36762, 37051, 37168, 40023, 40158, 40607 }, p2h("lun"));
    assertArrayEquals(new int[]{ 21657, 22184, 22404, 22751, 24324, 25314, 25871, 26407, 29649, 29903, 31423, 31548, 31840, 32843, 32894, 32999, 38471, 38534, 38580, 40845, 40857 }, p2h("lung"));
    assertArrayEquals(new int[]{ 20616, 20723, 24459, 26647, 29575, 32895 }, p2h("lut"));
    assertArrayEquals(new int[]{ 21780 }, p2h("m"));
    assertArrayEquals(new int[]{ 21527, 21966, 22043, 22920, 23229, 29595, 29802, 30721, 30908, 32629, 34434, 34718, 39340, 39377, 39380, 39384, 39391, 39429, 39437, 39439, 39446, 39469, 39478, 39480, 39489, 39490, 39491, 39492, 39498, 39503, 39524, 39525, 39532, 39541, 39543, 39546, 39549, 39552, 39554, 39557, 39568, 39570, 39571, 39574, 39576, 39579, 39580, 39583, 39584, 39586, 39587, 39589, 39591, 40635 }, p2h("ma"));
    assertArrayEquals(new int[]{ 20080, 21334, 22475, 36023, 36067, 36808, 36993 }, p2h("maai"));
    assertArrayEquals(new int[]{ 19975, 20906, 24130, 24930, 26202, 26364, 28459, 33836, 34067, 34542, 34875, 39237, 39314, 39995, 40151 }, p2h("maan"));
    assertArrayEquals(new int[]{ 23391, 29467, 30450, 33355, 34594, 37683, 38192 }, p2h("maang"));
    assertArrayEquals(new int[]{ 21359, 26164, 29281, 29483, 30683, 33541, 35980, 35987, 37466, 38086 }, p2h("maau"));
    assertArrayEquals(new int[]{ 21674, 30511, 30599, 31859, 35598, 35868, 36855, 37274 }, p2h("mai"));
    assertArrayEquals(new int[]{ 21787, 22044, 22696, 33032, 33033, 34022, 38476, 39488, 40613, 40614, 40664 }, p2h("mak"));
    assertArrayEquals(new int[]{ 21006, 21563, 21839, 24751, 25003, 25279, 25935, 25991, 27665, 27667, 27887, 29882, 32010, 32011, 32441, 32862, 34442, 38313, 38382, 38395, 38397, 38639 }, p2h("man"));
    assertArrayEquals(new int[]{ 30431, 33804 }, p2h("mang"));
    assertArrayEquals(new int[]{ 20060, 21247, 23494, 29289, 34588, 34972, 35178, 35600, 35879 }, p2h("mat"));
    assertArrayEquals(new int[]{ 20137, 20372, 26576, 29279, 30045, 30520, 33538, 35584, 35628, 35851, 35884, 36031, 36152 }, p2h("mau"));
    assertArrayEquals(new int[]{ 21673 }, p2h("me"));
    assertArrayEquals(new int[]{ 20130, 21619, 23059, 23194, 23504, 23614, 23883, 24365, 24494, 25929, 26256, 26410, 28479, 30473, 31964, 32315, 32654, 33353, 34183, 34541, 37762, 38209, 38213, 38718, 38753, 40539, 40587, 40812 }, p2h("mei"));
    assertArrayEquals(new int[]{ 21674 }, p2h("mi"));
    assertArrayEquals(new int[]{ 27753, 35219, 35269 }, p2h("mik"));
    assertArrayEquals(new int[]{ 20813, 20885, 21193, 23081, 26825, 30496, 32191, 32236, 32501, 32517, 38754, 40629 }, p2h("min"));
    assertArrayEquals(new int[]{ 20901, 21517, 21629, 26126, 30399, 33559, 34719, 37225, 37528, 38125, 40180, 40483 }, p2h("ming"));
    assertArrayEquals(new int[]{ 28357, 28781, 31742, 34065 }, p2h("mit"));
    assertArrayEquals(new int[]{ 21941, 22937, 24217, 24287, 25551, 26483, 28156, 28218, 30596, 31186, 31368, 33495, 34256, 37000, 37672, 38170 }, p2h("miu"));
    assertArrayEquals(new int[]{ 20398, 20871, 20882, 21153, 21209, 21215, 21586, 21726, 22072, 22675, 22953, 22982, 23285, 24043, 24125, 24917, 25098, 25287, 25721, 26080, 26286, 27169, 27494, 27595, 27597, 27611, 27626, 27635, 27637, 27641, 27645, 27647, 27653, 27654, 27655, 27660, 27661, 28961, 32772, 33310, 33436, 34154, 35491, 35820, 38654, 38695, 40289, 40521 }, p2h("mo"));
    assertArrayEquals(new int[]{ 20040, 23332, 23351, 25705, 25720, 30952, 32817, 34321, 39764, 40636, 40637, 40638 }, p2h("moh"));
    assertArrayEquals(new int[]{ 20906, 21085, 21093, 23518, 24130, 24149, 28448, 33180, 33707 }, p2h("mok"));
    assertArrayEquals(new int[]{ 20129, 22916, 24536, 24537, 26395, 32593, 32596, 33426, 33579, 33725 }, p2h("mong"));
    assertArrayEquals(new int[]{ 22969, 23186, 26151, 26522, 26757, 27599, 29028, 29611, 37238, 38665, 39749 }, p2h("mooi"));
    assertArrayEquals(new int[]{ 20204, 20497, 24758, 28385, 28415, 30610, 30622, 36434, 36451, 37702, 38036, 38272, 38278, 38284, 38286, 38292, 38315, 38316, 38317, 38326, 38332, 38333, 38334, 38335, 38339, 38344, 38347, 38352, 38356, 38366, 38373, 38376, 38379, 38385, 38387, 38389, 38390, 38391, 38396, 38398, 38403, 38404, 38406, 38408, 38410, 38411, 38412, 38413, 38415, 38418, 38421, 38422, 38423, 38426, 39010, 39071, 39726 }, p2h("moon"));
    assertArrayEquals(new int[]{ 25273, 26411, 27519, 27521, 27794, 27809, 27819, 33545 }, p2h("moot"));
    assertArrayEquals(new int[]{ 20203, 26408, 26440, 26444, 26451, 26473, 26474, 26485, 26492, 26520, 26526, 26533, 26535, 26536, 26541, 26544, 26547, 26549, 26552, 26561, 26563, 26584, 26585, 26586, 26589, 26594, 26601, 26621, 26624, 26633, 26634, 26636, 26638, 26653, 26674, 26675, 26686, 26689, 26692, 26697, 26698, 26702, 26709, 26720, 26721, 26722, 26724, 26726, 26727, 26731, 26740, 26743, 26755, 26767, 26771, 26772, 26783, 26818, 26838, 26851, 26864, 26873, 26876, 26881, 26891, 26895, 26896, 26911, 26912, 26932, 26937, 26946, 26967, 26973, 26976, 26984, 26987, 26990, 26993, 27000, 27008, 27012, 27015, 27016, 27017, 27032, 27050, 27071, 27084, 27086, 27111, 27112, 27141, 27194, 27208, 27265, 27273, 27292, 27305, 27354, 27355, 27357, 27359, 27368, 27370, 27372, 27379, 27384, 27386, 27410, 27414, 27792, 29287, 29522, 30446, 30449, 30457, 30468, 30471, 30472, 30477, 30489, 30490, 30498, 30501, 30502, 30509, 30517, 30531, 30545, 30554, 30562, 30565, 30566, 30568, 30589, 30592, 30605, 30609, 30623, 30624, 30640, 30645, 30652, 30653, 31302, 33500, 37484, 38076 }, p2h("muk"));
    assertArrayEquals(new int[]{ 22818, 25077, 26406, 26790, 27308, 33384, 33945 }, p2h("mung"));
    assertArrayEquals(new int[]{ 21738, 23068, 25343, 25386, 37027, 38222 }, p2h("na"));
    assertArrayEquals(new int[]{ 20035, 22902, 27670 }, p2h("naai"));
    assertArrayEquals(new int[]{ 21335, 21891, 23706, 23888, 30007, 33129 }, p2h("naam"));
    assertArrayEquals(new int[]{ 38590, 38627 }, p2h("naan"));
    assertArrayEquals(new int[]{ 21558, 21584, 32013, 32435, 35365, 35767, 37385, 38048 }, p2h("naap"));
    assertArrayEquals(new int[]{ 21622, 25376, 25747, 28118, 37891, 38105, 38393, 39719 }, p2h("naau"));
    assertArrayEquals(new int[]{ 27877 }, p2h("nai"));
    assertArrayEquals(new int[]{ 35543, 35842 }, p2h("nam"));
    assertArrayEquals(new int[]{ 33021 }, p2h("nang"));
    assertArrayEquals(new int[]{ 22942, 23346, 25197, 26429, 31941, 32016, 32445, 32808, 37397, 38062 }, p2h("nau"));
    assertArrayEquals(new int[]{ 21602 }, p2h("ne"));
    assertArrayEquals(new int[]{ 20320, 22958, 23612, 24357, 24396, 24744, 26062, 27319, 27953, 31074, 33147, 33193, 37422, 38092, 39180, 39285 }, p2h("nei"));
    assertArrayEquals(new int[]{ 23064 }, p2h("neung"));
    assertArrayEquals(new int[]{ 20116, 20213, 20237, 21320, 21555, 21556, 21566, 21780, 21999, 24735, 25410, 26212, 26791, 34568, 35492, 35823, 40751 }, p2h("ng"));
    assertArrayEquals(new int[]{ 20258, 20324, 29273, 29926, 29935, 29940, 29951, 29964, 29967, 29969, 29971, 33469, 34460, 34905, 35357, 35766, 38597 }, p2h("nga"));
    assertArrayEquals(new int[]{ 21000, 23830, 25457, 28079, 33406 }, p2h("ngaai"));
    assertArrayEquals(new int[]{ 38989, 39069 }, p2h("ngaak"));
    assertArrayEquals(new int[]{ 23721, 24022, 30284 }, p2h("ngaam"));
    assertArrayEquals(new int[]{ 30524, 38593, 38991, 39068 }, p2h("ngaan"));
    assertArrayEquals(new int[]{ 30828 }, p2h("ngaang"));
    assertArrayEquals(new int[]{ 21676, 28102, 29243, 32948 }, p2h("ngaau"));
    assertArrayEquals(new int[]{ 20266, 20522, 20605, 21361, 21587, 22216, 24013, 27589, 30702, 32703, 33315, 33380, 33402, 34269, 34433, 34811, 35427, 35811, 38675, 39759 }, p2h("ngai"));
    assertArrayEquals(new int[]{ 21571 }, p2h("ngak"));
    assertArrayEquals(new int[]{ 24245, 40298, 40524 }, p2h("ngam"));
    assertArrayEquals(new int[]{ 37504, 38134, 38860, 38887, 40806, 40840 }, p2h("ngan"));
    assertArrayEquals(new int[]{ 20193, 20800, 23673, 36804 }, p2h("ngat"));
    assertArrayEquals(new int[]{ 20598, 21246, 29275, 29277, 29286, 29294, 29295, 29310, 29311, 29316, 29323, 29325, 29327, 29330, 29343, 32806, 34261, 37476, 38057 }, p2h("ngau"));
    assertArrayEquals(new int[]{ 21870, 22169 }, p2h("ngit"));
    assertArrayEquals(new int[]{ 20658, 25942, 29100, 32753, 32881 }, p2h("ngo"));
    assertArrayEquals(new int[]{ 20420, 21351, 21734, 23077, 23784, 25105, 33253, 34558, 35355, 35769, 37608, 38151, 39187, 39295, 40285, 40517 }, p2h("ngoh"));
    assertArrayEquals(new int[]{ 21574, 22806, 30861, 31001, 38305, 38402 }, p2h("ngoi"));
    assertArrayEquals(new int[]{ 20048, 23731, 27138, 35556, 35860, 37122, 37716, 38199, 38990, 39066 }, p2h("ngok"));
    assertArrayEquals(new int[]{ 23736 }, p2h("ngon"));
    assertArrayEquals(new int[]{ 26114 }, p2h("ngong"));
    assertArrayEquals(new int[]{ 29934, 29973 }, p2h("ngung"));
    assertArrayEquals(new int[]{ 21311, 28346, 30782, 31019 }, p2h("nik"));
    assertArrayEquals(new int[]{ 24565, 25288, 40655 }, p2h("nim"));
    assertArrayEquals(new int[]{ 24180 }, p2h("nin"));
    assertArrayEquals(new int[]{ 20318, 21659, 22144, 23425, 23527, 26592, 27320, 27870, 27873, 28632, 29406, 29552, 32845, 32889 }, p2h("ning"));
    assertArrayEquals(new int[]{ 25423, 25467, 28037, 32834, 32886, 37811, 38007, 38218, 38221, 39027, 39070 }, p2h("nip"));
    assertArrayEquals(new int[]{ 23615, 34949, 35018, 40165, 40221, 40223, 40239, 40240, 40258, 40274, 40275, 40284, 40288, 40303, 40327, 40329, 40344, 40346, 40361, 40380, 40386, 40409, 40410, 40421, 40422, 40431, 40434, 40436, 40440, 40469, 40477, 40478, 40479, 40491, 40492, 40497, 40498, 40502, 40503, 40504, 40505, 40506, 40510, 40513, 40514, 40516, 40518, 40519, 40520, 40523, 40526, 40529, 40533, 40535, 40538, 40540, 40542, 40547, 40552, 40553, 40554, 40555, 40556, 40561 }, p2h("niu"));
    assertArrayEquals(new int[]{ 21162, 22900, 24361, 24594, 24700, 24817, 33041, 33126 }, p2h("no"));
    assertArrayEquals(new int[]{ 20649, 20794, 21903, 25062, 31983 }, p2h("noh"));
    assertArrayEquals(new int[]{ 20839, 20869, 22856, 26608, 32784, 39186, 39297 }, p2h("noi"));
    assertArrayEquals(new int[]{ 35582, 35834, 38168 }, p2h("nok"));
    assertArrayEquals(new int[]{ 22218, 22228, 29924 }, p2h("nong"));
    assertArrayEquals(new int[]{ 23273, 26262 }, p2h("nuen"));
    assertArrayEquals(new int[]{ 22899, 22955, 23033, 23045, 23125, 23143, 23149, 23162, 23195, 23210, 23215, 23218, 23224, 23228, 23256, 23260, 23264, 23275, 23281, 23318, 23319, 23321, 33004, 37369, 38037 }, p2h("nui"));
    assertArrayEquals(new int[]{ 34884 }, p2h("nuk"));
    assertArrayEquals(new int[]{ 20396, 20738, 20892, 21725, 22117, 27987, 28611, 33043, 33215, 36786 }, p2h("nung"));
    assertArrayEquals(new int[]{ 22366, 22626, 22885, 22887, 25034, 28595, 34948, 35158 }, p2h("o"));
    assertArrayEquals(new int[]{ 21908, 22114, 23104, 26607, 30132, 30206, 33499, 36603, 36722 }, p2h("oh"));
    assertArrayEquals(new int[]{ 21696, 23250, 23329, 24859, 29233, 30353, 30362, 34108, 34297, 38207, 38701, 38724 }, p2h("oi"));
    assertArrayEquals(new int[]{ 22121, 22441, 22538, 24694, 24801, 24853 }, p2h("ok"));
    assertArrayEquals(new int[]{ 23433, 25353, 26696, 27688, 33018, 37544, 38133, 38797 }, p2h("on"));
    assertArrayEquals(new int[]{ 30414, 32942, 39599 }, p2h("ong"));
    assertArrayEquals(new int[]{ 24597, 25170, 26487, 29228, 29750, 32793, 36276 }, p2h("pa"));
    assertArrayEquals(new int[]{ 20467, 25490, 27966, 29260 }, p2h("paai"));
    assertArrayEquals(new int[]{ 21866, 24085, 25293, 26575, 29632, 31893, 39748 }, p2h("paak"));
    assertArrayEquals(new int[]{ 25203, 25856, 30460 }, p2h("paan"));
    assertArrayEquals(new int[]{ 22061, 24429, 26834, 26842, 28558, 28921, 30844, 33192, 40300, 40527 }, p2h("paang"));
    assertArrayEquals(new int[]{ 21032, 21638, 25243, 25291, 27873, 28846, 35961, 36305 }, p2h("paau"));
    assertArrayEquals(new int[]{ 25209 }, p2h("pai"));
    assertArrayEquals(new int[]{ 21943, 22132, 28626, 28693, 36007, 38971, 39057 }, p2h("pan"));
    assertArrayEquals(new int[]{ 20973, 24977, 26379 }, p2h("pang"));
    assertArrayEquals(new int[]{ 35973, 35978, 35988, 35992 }, p2h("pao"));
    assertArrayEquals(new int[]{ 21305, 30091 }, p2h("pat"));
    assertArrayEquals(new int[]{ 19989, 20211, 21624, 23138, 23617, 25259, 26503, 29749, 30130, 30174, 30382, 30738, 35692, 37145, 37433, 38093 }, p2h("pei"));
    assertArrayEquals(new int[]{ 21128 }, p2h("pek"));
    assertArrayEquals(new int[]{ 20731, 30294, 36767, 38713 }, p2h("pik"));
    assertArrayEquals(new int[]{ 20415, 20559, 29255, 31687, 32232, 32534, 34649, 36941, 39449, 39575 }, p2h("pin"));
    assertArrayEquals(new int[]{ 20050, 20444, 22378, 23000, 23049, 23631, 24179, 25256, 25340, 29942, 30768, 32856, 33529, 33805, 34315, 35413, 35780, 39394, 39425, 39560, 39563 }, p2h("ping"));
    assertArrayEquals(new int[]{ 20031, 25735, 27669, 30629 }, p2h("pit"));
    assertArrayEquals(new int[]{ 21117, 22028, 23254, 27533, 28418, 29922, 31080, 33176, 39108, 39128 }, p2h("piu"));
    assertArrayEquals(new int[]{ 21261, 22275, 25265, 26222, 28006, 28325, 33071, 33302, 33670, 33889, 33970, 34957, 35676, 35889, 37920, 38138, 38248 }, p2h("po"));
    assertArrayEquals(new int[]{ 21493, 23110, 30372, 30772, 36315, 38071, 38935, 39047 }, p2h("poh"));
    assertArrayEquals(new int[]{ 22103, 25169, 25778, 26420, 37879, 38244 }, p2h("pok"));
    assertArrayEquals(new int[]{ 20621, 24222, 26049, 28354, 32810, 33152, 34444, 34691, 35607, 35876, 40848 }, p2h("pong"));
    assertArrayEquals(new int[]{ 20329, 20493, 22383, 22521, 24472, 27803, 32986, 33769, 35060, 36064, 36180, 37197, 38187, 38506, 38664 }, p2h("pooi"));
    assertArrayEquals(new int[]{ 21028, 25292, 28504, 30406, 30424, 30436, 30928 }, p2h("poon"));
    assertArrayEquals(new int[]{ 27900, 28497, 37432, 38073 }, p2h("poot"));
    assertArrayEquals(new int[]{ 20166, 20693 }, p2h("puk"));
    assertArrayEquals(new int[]{ 25447, 30896, 31735, 34028 }, p2h("pung"));
    assertArrayEquals(new int[]{ 20200, 21317, 21956, 27801, 27922, 30722, 32023, 32433, 32781, 33678, 35039, 39882, 40104 }, p2h("sa"));
    assertArrayEquals(new int[]{ 24473, 26194, 26348, 29626, 29885, 33296 }, p2h("saai"));
    assertArrayEquals(new int[]{ 19977, 21441, 21443, 34923, 37348, 38032 }, p2h("saam"));
    assertArrayEquals(new int[]{ 21024, 21034, 22882, 22989, 22999, 23665, 23688, 23693, 23704, 23705, 23708, 23714, 23715, 23723, 23724, 23733, 23735, 23741, 23745, 23748, 23755, 23762, 23780, 23796, 23811, 23814, 23821, 23835, 23838, 23844, 23846, 23847, 23854, 23859, 23860, 23869, 23870, 23882, 23899, 23901, 23915, 23919, 23924, 23937, 23938, 23961, 23965, 23968, 23975, 23991, 25955, 26613, 26629, 27733, 28538, 29642, 31713, 33314, 35955, 36314, 38274, 38377 }, p2h("saan"));
    assertArrayEquals(new int[]{ 29983, 30465 }, p2h("saang"));
    assertArrayEquals(new int[]{ 21277, 22334, 30776, 38670 }, p2h("saap"));
    assertArrayEquals(new int[]{ 21049, 21070, 25746, 26432, 27578, 29022, 33832, 34217, 37837, 38233 }, p2h("saat"));
    assertArrayEquals(new int[]{ 21736, 25422, 26786, 31245, 33348, 38808 }, p2h("saau"));
    assertArrayEquals(new int[]{ 19990, 21183, 21218, 22124, 23167, 27927, 29312, 30802, 31579, 31721, 31902, 32048, 32454, 35199, 35475, 36893 }, p2h("sai"));
    assertArrayEquals(new int[]{ 22139, 22622 }, p2h("sak"));
    assertArrayEquals(new int[]{ 20160, 23158, 23352, 23457, 23529, 23697, 24515, 24521, 24527, 24534, 24545, 24548, 24554, 24557, 24558, 24561, 24568, 24574, 24579, 24580, 24582, 24586, 24589, 24591, 24601, 24603, 24614, 24617, 24619, 24629, 24639, 24641, 24642, 24666, 24669, 24675, 24679, 24696, 24697, 24698, 24701, 24707, 24716, 24722, 24726, 24730, 24731, 24733, 24747, 24749, 24753, 24756, 24763, 24774, 24792, 24794, 24797, 24812, 24820, 24832, 24838, 24845, 24846, 24860, 24864, 24867, 24870, 24872, 24875, 24884, 24887, 24894, 24906, 24909, 24925, 24927, 24938, 24947, 24949, 24978, 24980, 24989, 24999, 25004, 25006, 25015, 25035, 25036, 25037, 25041, 25044, 25059, 25064, 25082, 25094, 25095, 26862, 27784, 28145, 28183, 28402, 29247, 29978, 37108 }, p2h("sam"));
    assertArrayEquals(new int[]{ 20280, 21627, 23072, 24910, 26032, 26216, 30003, 30775, 31070, 32051, 32453, 32958, 33102, 33251, 34218, 36523, 36763, 36784, 37573, 38156 }, p2h("san"));
    assertArrayEquals(new int[]{ 29298, 29983, 29989 }, p2h("sang"));
    assertArrayEquals(new int[]{ 21313, 25342, 28073, 28287, 28544, 28629 }, p2h("sap"));
    assertArrayEquals(new int[]{ 22833, 23454, 23460, 23526, 29791, 33181, 34417, 34664 }, p2h("sat"));
    assertArrayEquals(new int[]{ 20167, 20462, 20861, 21463, 21471, 21806, 21974, 22013, 22781, 23432, 24833, 25163, 25194, 25247, 25275, 25290, 25306, 25326, 25334, 25352, 25378, 25394, 25401, 25411, 25449, 25451, 25453, 25466, 25480, 25482, 25486, 25516, 25517, 25518, 25520, 25524, 25532, 25534, 25540, 25542, 25550, 25566, 25568, 25586, 25590, 25599, 25611, 25612, 25627, 25628, 25632, 25633, 25638, 25665, 25669, 25681, 25682, 25692, 25694, 25709, 25718, 25732, 25750, 25753, 25759, 25779, 25783, 25784, 25786, 25792, 25808, 25815, 25816, 25826, 25828, 25847, 25852, 25860, 25865, 25878, 25883, 25893, 25902, 25910, 27024, 28465, 29417, 29560, 30246, 31168, 32353, 32483, 32670, 33020, 33359, 33368, 33696, 37802, 37885, 38152, 38204, 39318 }, p2h("sau"));
    assertArrayEquals(new int[]{ 20123, 20312, 20889, 21368, 21861, 23531, 23556, 25448, 27899, 28681, 31038, 33293, 34503, 36050, 36170, 36198, 40605 }, p2h("se"));
    assertArrayEquals(new int[]{ 22235, 27515 }, p2h("sei"));
    assertArrayEquals(new int[]{ 26027, 30707, 30710, 30712, 30720, 30729, 30737, 30743, 30744, 30748, 30749, 30751, 30755, 30757, 30758, 30761, 30764, 30765, 30777, 30778, 30779, 30780, 30791, 30796, 30798, 30800, 30805, 30806, 30807, 30820, 30824, 30826, 30829, 30855, 30867, 30874, 30875, 30876, 30881, 30883, 30885, 30889, 30893, 30898, 30905, 30921, 30932, 30937, 30947, 30951, 30956, 30959, 30962, 30964, 30973, 30981, 30995, 31006, 31009, 31012, 31018, 31025, 31028, 37675, 38177 }, p2h("sek"));
    assertArrayEquals(new int[]{ 22768, 32882, 33125 }, p2h("seng"));
    assertArrayEquals(new int[]{ 21066, 37984, 38084 }, p2h("seuk"));
    assertArrayEquals(new int[]{ 19978, 20260, 20607, 20663, 20767, 21410, 21452, 21830, 22039, 22673, 22674, 23270, 23360, 23578, 23581, 24120, 24258, 24476, 24819, 27527, 27556, 28248, 29109, 30456, 31665, 35059, 35140, 36062, 36175, 38002, 38262, 38617, 38684 }, p2h("seung"));
    assertArrayEquals(new int[]{ 19997, 20107, 20181, 20351, 20365, 21273, 21422, 21490, 21496, 21661, 21980, 22070, 22763, 23608, 23629, 23630, 23769, 24027, 24066, 24072, 24107, 24285, 24337, 24338, 24605, 24675, 25749, 26031, 26045, 26102, 26159, 26178, 27663, 29422, 29509, 31034, 31169, 32006, 32007, 32008, 32019, 32021, 32049, 32050, 32058, 32060, 32064, 32078, 32114, 32115, 32131, 32134, 32136, 32158, 32163, 32172, 32176, 32185, 32190, 32196, 32199, 32203, 32215, 32217, 32225, 32230, 32241, 32242, 32246, 32249, 32265, 32266, 32267, 32272, 32273, 32285, 32286, 32287, 32301, 32306, 32309, 32313, 32325, 32326, 32338, 32346, 32354, 32367, 32368, 32381, 32382, 32392, 32394, 32408, 32417, 32421, 32424, 32425, 32432, 32446, 32448, 32449, 32450, 32457, 32459, 32460, 32464, 32468, 32471, 32475, 32480, 32481, 32488, 32491, 32495, 32497, 32498, 32502, 32506, 32507, 32510, 32513, 32514, 32515, 32519, 32520, 32523, 32524, 32525, 32527, 32529, 32530, 32535, 32537, 32539, 32540, 32543, 32545, 32546, 32547, 32548, 32549, 32550, 32551, 32554, 32555, 32556, 32557, 32559, 32560, 32561, 32562, 32563, 32565, 32902, 35270, 35430, 35433, 35610, 35797, 35799, 35877, 35913, 37424, 37750, 38088, 38198, 38849, 39387, 39542 }, p2h("si"));
    assertArrayEquals(new int[]{ 23219, 24335, 24687, 24713, 24796, 25325, 26132, 26224, 26512, 28511, 29060, 30361, 33284, 33394, 34432, 34597, 34645, 34763, 35672, 35782, 36606, 36732, 36969, 37322, 37323, 37547, 37675, 38127, 38177, 39135, 39144, 39145, 39146, 39147, 39149, 39156, 39166, 39177, 39181, 39185, 39192, 39195, 39219, 39228, 39231, 39235, 39240, 39241, 39244, 39252, 39255, 39260, 39271, 39272, 39273, 39274, 39275, 39276, 39280, 39284, 39287, 39293, 39296, 39300, 39303, 39306, 39309, 39312, 39313, 39315, 39316, 39317 }, p2h("sik"));
    assertArrayEquals(new int[]{ 23157, 23307, 27546, 27563, 31109, 31146, 33515, 34633, 34796, 38275, 38378, 38485, 38493 }, p2h("sim"));
    assertArrayEquals(new int[]{ 20185, 20521, 20808, 20924, 21892, 25159, 25797, 27673, 29053, 30307, 30316, 31176, 31868, 32218, 32341, 32447, 32558, 32673, 32680, 33146, 33203, 34798, 37521, 38115, 38704, 39854, 40092 }, p2h("sin"));
    assertArrayEquals(new int[]{ 19998, 20056, 21097, 21213, 21319, 22307, 22478, 22768, 22995, 24615, 24826, 25104, 25215, 26143, 29481, 30427, 32361, 32499, 32854, 32882, 32988, 33125, 35488, 35802, 37266, 37614, 38102 }, p2h("sing"));
    assertArrayEquals(new int[]{ 24913, 25086, 25668, 25885, 28041 }, p2h("sip"));
    assertArrayEquals(new int[]{ 23633, 26964, 27844, 31363, 31434, 33292, 34203, 37733, 38194 }, p2h("sit"));
    assertArrayEquals(new int[]{ 20806, 21880, 22063, 23477, 23567, 23569, 28040, 28903, 29138, 30813, 31505, 31659, 31787, 32057, 32461, 32903, 33831, 34157, 37045, 37559, 38144, 38660, 38902 }, p2h("siu"));
    assertArrayEquals(new int[]{ 21961, 22609, 23234, 25195, 25475, 25620, 25822, 25851, 25968, 25976, 28335, 31267, 31308, 32032, 33487, 34311, 35380, 35785, 37221, 38920, 39035, 39479, 39578 }, p2h("so"));
    assertArrayEquals(new int[]{ 20667, 21766, 21794, 21990, 21993, 23057, 25152, 26797, 26803, 29712, 29795, 30095, 32679, 34001, 34092, 37782, 38145 }, p2h("soh"));
    assertArrayEquals(new int[]{ 33134, 39955, 40131 }, p2h("soi"));
    assertArrayEquals(new int[]{ 21965, 22007, 26388, 32034 }, p2h("sok"));
    assertArrayEquals(new int[]{ 20007, 21930, 21971, 26705, 29245, 39001, 39073 }, p2h("song"));
    assertArrayEquals(new int[]{ 20008, 20070, 24246, 24661, 25101, 25234, 26257, 26360, 26530, 26641, 27166, 27193, 27530, 28335, 31446, 33298, 34223, 35918, 36664, 36755, 40653, 40736 }, p2h("sue"));
    assertArrayEquals(new int[]{ 21550, 23385, 23403, 23459, 25439, 25613, 26059, 29764, 29831, 31639, 31686, 33337, 33948, 36873, 36984, 37240 }, p2h("suen"));
    assertArrayEquals(new int[]{ 35498, 35828, 38634 }, p2h("suet"));
    assertArrayEquals(new int[]{ 22402, 22661, 23681, 24069, 24101, 24407, 27506, 27700, 28140, 29790, 30209, 30561, 30862, 31071, 31237, 31246, 31319, 31929, 32110, 32143, 32210, 32485, 32490, 32997, 33795, 34429, 34928, 35504, 35841, 36930, 36995, 38567, 38614, 38656, 38920, 39035, 39635 }, p2h("sui"));
    assertArrayEquals(new int[]{ 20495, 20723, 21460, 22654, 22809, 23408, 23487, 23646, 23660, 28113, 29087, 31903, 32302, 32553, 32899, 32901, 34047, 34560, 36118, 36174 }, p2h("suk"));
    assertArrayEquals(new int[]{ 20449, 21767, 24455, 27529, 27739, 28147, 30636, 31499, 31565, 32020, 32431, 33308, 33600, 35338, 35426, 35524, 35759, 35810, 35846, 36805, 36874, 36956, 37255, 38918, 39034, 39348, 39535 }, p2h("sun"));
    assertArrayEquals(new int[]{ 20935, 23435, 23815, 23913, 24578, 24939, 26494, 31462, 32824, 32883, 36865, 39686 }, p2h("sung"));
    assertArrayEquals(new int[]{ 24676, 25100, 25684, 26415, 34752, 34899, 36848 }, p2h("sut"));
    assertArrayEquals(new int[]{ 20182, 22905, 23427, 37448, 38090 }, p2h("ta"));
    assertArrayEquals(new int[]{ 20643, 21588, 22826, 24577, 24907, 27760, 27888, 36024, 36151, 37214, 37414, 38043 }, p2h("taai"));
    assertArrayEquals(new int[]{ 25506, 28525, 30192, 35203, 35527, 35674, 35848, 35885, 36010, 36138 }, p2h("taam"));
    assertArrayEquals(new int[]{ 21497, 22022, 22363, 22374, 22727, 22962, 24528, 25674, 25892, 27264, 28393, 28760, 28845, 30251, 30321, 30899, 34962 }, p2h("taan"));
    assertArrayEquals(new int[]{ 22349, 22604, 22612, 36427, 36962 }, p2h("taap"));
    assertArrayEquals(new int[]{ 20307, 21059, 21884, 22159, 22564, 23075, 23625, 23644, 25552, 26367, 26799, 28053, 30535, 32224, 32532, 33922, 35558, 35867, 36420, 37563, 38161, 38988, 39064, 39636 }, p2h("tai"));
    assertArrayEquals(new int[]{ 21534, 27709, 27718 }, p2h("tan"));
    assertArrayEquals(new int[]{ 28373, 31824, 33150, 34276, 39472 }, p2h("tang"));
    assertArrayEquals(new int[]{ 20599, 22836, 25237, 36879, 38957 }, p2h("tau"));
    assertArrayEquals(new int[]{ 36386 }, p2h("tek"));
    assertArrayEquals(new int[]{ 21381, 24307, 33351, 36819, 36821, 36836, 36837, 36838, 36840, 36841, 36846, 36851, 36868, 36875, 36877, 36881, 36885, 36886, 36897, 36902, 36909, 36911, 36918, 36932, 36945, 36946, 36952, 36955, 36968, 36980, 36989, 36999, 37008 }, p2h("teng"));
    assertArrayEquals(new int[]{ 20508, 21076, 24529, 24789, 37617, 38141 }, p2h("tik"));
    assertArrayEquals(new int[]{ 24684, 24806, 25001, 27524, 28155, 29980, 33300, 39214 }, p2h("tim"));
    assertArrayEquals(new int[]{ 20291, 22635, 22825, 28359, 30000, 30027, 33094 }, p2h("tin"));
    assertArrayEquals(new int[]{ 20141, 20572, 21548, 23159, 24237, 24311, 25402, 28867, 28916, 30010, 32893, 34578, 34579, 37580, 38116, 38662 }, p2h("ting"));
    assertArrayEquals(new int[]{ 24086, 36028, 36148 }, p2h("tip"));
    assertArrayEquals(new int[]{ 37941, 38081 }, p2h("tit"));
    assertArrayEquals(new int[]{ 20347, 25361, 26465, 26781, 30522, 31079, 31381, 31900, 35519, 35843, 36339, 37530, 38123, 40800, 40838 }, p2h("tiu"));
    assertArrayEquals(new int[]{ 20820, 21480, 21520, 21845, 22270, 22294, 22303, 22313, 22314, 22316, 22318, 22319, 22329, 22331, 22348, 22364, 22376, 22377, 22379, 22381, 22387, 22390, 22395, 22396, 22405, 22406, 22412, 22419, 22432, 22433, 22436, 22439, 22445, 22450, 22452, 22456, 22479, 22482, 22485, 22488, 22489, 22490, 22493, 22497, 22500, 22509, 22511, 22516, 22520, 22525, 22528, 22539, 22541, 22553, 22557, 22558, 22560, 22596, 22607, 22610, 22615, 22628, 22629, 22636, 22656, 22657, 22665, 22682, 22716, 22725, 22745, 22746, 22754, 22871, 23648, 24466, 25487, 26691, 28034, 28059, 28120, 28372, 28644, 28952, 29182, 31095, 31153, 32091, 32486, 32922, 33660, 33796, 35342, 35752, 36424, 36867, 36884, 37367, 38029, 38518, 38876, 38892, 40729 }, p2h("to"));
    assertArrayEquals(new int[]{ 20311, 21822, 22949, 25302, 26925, 27234, 27825, 33333, 38464, 39345, 39389, 39534, 39548, 40213, 40501 }, p2h("toh"));
    assertArrayEquals(new int[]{ 21488, 25260, 27526, 32974, 33492, 36882, 36958 }, p2h("toi"));
    assertArrayEquals(new int[]{ 25176, 25299, 36310 }, p2h("tok"));
    assertArrayEquals(new int[]{ 20504, 20645, 20795, 21776, 22530, 22616, 25642, 26848, 27748, 28108, 28271, 28907, 29096, 29145, 31958, 32688, 32805, 33179, 34739, 36255, 36538, 37283 }, p2h("tong"));
    assertArrayEquals(new int[]{ 22242, 22244, 22296, 23663, 33216 }, p2h("tuen"));
    assertArrayEquals(new int[]{ 33067, 33073 }, p2h("tuet"));
    assertArrayEquals(new int[]{ 25512, 33151, 34555, 34581, 35114, 36864, 38969, 39059 }, p2h("tui"));
    assertArrayEquals(new int[]{ 31167, 31171 }, p2h("tuk"));
    assertArrayEquals(new int[]{ 30083, 30462 }, p2h("tun"));
    assertArrayEquals(new int[]{ 20189, 20325, 20681, 20718, 21516, 22005, 24420, 25413, 26704, 26742, 30140, 30171, 30643, 31461, 31570, 32113, 32479, 33012, 33375, 35466, 35588, 36890, 37230, 37509, 38108 }, p2h("tung"));
    assertArrayEquals(new int[]{ 23627, 28197 }, p2h("uk"));
    assertArrayEquals(new int[]{ 21326, 21703, 21719, 22057, 23043, 27964, 30011, 30054, 30059, 31402, 33775, 34521, 35441, 35805, 37877, 38119 }, p2h("wa"));
    assertArrayEquals(new int[]{ 22351, 22750, 24576, 25079, 27498, 28142 }, p2h("waai"));
    assertArrayEquals(new int[]{ 21010, 21123, 24785, 25110, 30011, 30059 }, p2h("waak"));
    assertArrayEquals(new int[]{ 23462, 24187, 24367, 24398, 24739, 25405, 28286, 28771, 29609, 29615, 29872, 36824, 36996, 38929, 39037, 39879, 40105 }, p2h("waan"));
    assertArrayEquals(new int[]{ 27178, 27243 }, p2h("waang"));
    assertArrayEquals(new int[]{ 25366, 28369, 29502 }, p2h("waat"));
    assertArrayEquals(new int[]{ 20026, 20255, 20301, 20553, 20558, 21321, 21355, 21807, 21890, 21919, 22237, 22241, 22251, 22260, 22261, 22265, 22271, 22276, 22279, 22281, 22282, 22285, 22300, 22996, 23041, 23561, 24799, 24800, 24935, 24944, 26693, 27088, 27584, 27585, 28205, 28493, 28656, 28858, 30031, 31229, 31330, 32173, 32239, 32428, 32500, 32963, 33479, 33806, 33894, 34074, 34907, 35569, 35586, 35763, 35859, 36829, 36949, 36951, 36986, 38859, 38886 }, p2h("wai"));
    assertArrayEquals(new int[]{ 20113, 20801, 21243, 21248, 23609, 25653, 26197, 26248, 27538, 27550, 27698, 27699, 27985, 28151, 28201, 28222, 28331, 30239, 31283, 31337, 32792, 33464, 34164, 34314, 35554, 35816, 36816, 36939, 37095, 37142, 37213, 37278, 38504, 38549, 38642, 38901, 38907, 39746 }, p2h("wan"));
    assertArrayEquals(new int[]{ 23439, 24344 }, p2h("wang"));
    assertArrayEquals(new int[]{ 20500, 23624 }, p2h("wat"));
    assertArrayEquals(new int[]{ 22495 }, p2h("wik"));
    assertArrayEquals(new int[]{ 21647, 23896, 23992, 25172, 27054, 27704, 27891, 31310, 33635, 35424, 39053, 39062 }, p2h("wing"));
    assertArrayEquals(new int[]{ 20525, 21644, 21902, 23090, 23207, 23879, 28065, 28198, 31096, 31117, 31166, 31189, 31203, 31211, 31213, 31234, 31235, 31238, 31252, 31262, 31287, 31289, 31313, 31329, 31389, 31392, 31401, 34583, 34680, 37707, 38149 }, p2h("woh"));
    assertArrayEquals(new int[]{ 21136, 29554, 33719, 37962, 38252 }, p2h("wok"));
    assertArrayEquals(new int[]{ 20976, 24448, 24488, 24822, 26106, 26505, 27754, 29004, 29579, 29582, 29585, 29599, 29602, 29614, 29619, 29623, 29634, 29640, 29641, 29657, 29662, 29669, 29671, 29673, 29682, 29706, 29711, 29722, 29723, 29733, 29734, 29736, 29740, 29742, 29744, 29759, 29761, 29771, 29783, 29785, 29787, 29788, 29805, 29815, 29822, 29824, 29825, 29831, 29833, 29835, 29838, 29840, 29852, 29854, 29859, 29862, 29864, 29865, 29906, 29908, 29914, 30343, 30970, 31783, 34647, 40643, 40644 }, p2h("wong"));
    assertArrayEquals(new int[]{ 20044, 20114, 20913, 21596, 21978, 22774, 22778, 24800, 25142, 25143, 25160, 25252, 27745, 27818, 27986, 28246, 28396, 28408, 28879, 29392, 29474, 29786, 29920, 31068, 31946, 32993, 33419, 33899, 34676, 35703, 37794, 38056 }, p2h("woo"));
    assertArrayEquals(new int[]{ 20250, 21295, 22238, 24458, 26371, 27719, 34516 }, p2h("wooi"));
    assertArrayEquals(new int[]{ 20120, 20121, 21084, 21796, 21914, 22435, 25442, 25563, 25588, 26707, 28067, 28185, 28949, 29029, 29609, 30186, 30227, 30358, 30871, 32233, 32531, 33109, 35916 }, p2h("woon"));
    assertArrayEquals(new int[]{ 27963 }, p2h("woot"));
    assertArrayEquals(new int[]{ 20063 }, p2h("ya"));
    assertArrayEquals(new int[]{ 25341, 26355 }, p2h("yai"));
    assertArrayEquals(new int[]{ 20219, 21535, 21905, 22764, 22922, 27453, 27462, 28139, 31400, 33643, 34093, 36035, 36161, 38054, 38452, 38512, 38698, 38899, 39154, 39278 }, p2h("yam"));
    assertArrayEquals(new int[]{ 20154, 20161, 20190, 20274, 20417, 20451, 20547, 20743, 20995, 21360, 21554, 22240, 23035, 23381, 23493, 24341, 24525, 24571, 24681, 27427, 27575, 27684, 29956, 32009, 32427, 32996, 33291, 33589, 34398, 34451, 34885, 37542, 38111, 38544, 38577 }, p2h("yan"));
    assertArrayEquals(new int[]{ 20837, 25558, 27875, 33669, 33950, 37009 }, p2h("yap"));
    assertArrayEquals(new int[]{ 19968, 20314, 20350, 22777, 26085, 26094, 26095, 26096, 26112, 26115, 26133, 26137, 26141, 26165, 26166, 26177, 26196, 26199, 26207, 26209, 26231, 26244, 26252, 26269, 26289, 26302, 26308, 26311, 26331, 26345, 26359, 26482, 28322, 28805, 32774, 36920, 37808, 38226 }, p2h("yat"));
    assertArrayEquals(new int[]{ 19992, 20241, 20248, 20305, 20369, 20778, 21448, 21451, 21491, 21606, 21691, 23588, 24188, 24189, 24551, 24736, 24962, 25545, 25912, 26377, 26580, 27833, 28216, 29270, 29369, 29494, 29495, 30001, 34479, 35480, 35825, 36938, 37038, 37041, 37109, 37193, 37195, 37321, 37438, 37546, 38080, 38101, 39799, 40063, 40669, 40748 }, p2h("yau"));
    assertArrayEquals(new int[]{ 20556, 20918, 22812, 24825, 26928, 29239, 29242, 32822, 37326 }, p2h("ye"));
    assertArrayEquals(new int[]{ 24369, 26352, 30111, 30247, 32004, 32422, 33509, 33647, 34277, 34384, 35604, 35857, 36291, 36493, 38000, 38053, 40864 }, p2h("yeuk"));
    assertArrayEquals(new int[]{ 20208, 20335, 20859, 22199, 22756, 22830, 24457, 24665, 25196, 25562, 25880, 26472, 26679, 26954, 27171, 27523, 27687, 27915, 28478, 30113, 30162, 30221, 31155, 31207, 31344, 32650, 35731, 35753, 37247, 37312, 38451, 38525, 38789, 39178, 40230, 40495 }, p2h("yeung"));
    assertArrayEquals(new int[]{ 20041, 20108, 20197, 20202, 20234, 20340, 20381, 20506, 20736, 20799, 20818, 21139, 21307, 21670, 21695, 22123, 22839, 23016, 23452, 23572, 24050, 24322, 24413, 24414, 24609, 24847, 25087, 25311, 25836, 26070, 26131, 26885, 27562, 27778, 28458, 29246, 30064, 30097, 30691, 31227, 32186, 32494, 32681, 32780, 32819, 32900, 33008, 34915, 34921, 34930, 34941, 34943, 34946, 34978, 34999, 35004, 35014, 35017, 35022, 35042, 35043, 35045, 35048, 35056, 35057, 35068, 35070, 35082, 35091, 35097, 35098, 35099, 35105, 35115, 35123, 35126, 35128, 35137, 35145, 35165, 35168, 35174, 35195, 35516, 35696, 35758, 35850, 37291, 37498, 37541, 37951, 38098, 38129, 38257, 38434, 38460, 38461, 38466, 38473, 38484, 38488, 38495, 38503, 38508, 38514, 38537, 38948, 39056, 40671 }, p2h("yi"));
    assertArrayEquals(new int[]{ 37015, 37017, 37019, 37021, 37025, 37036, 37040, 37043, 37044, 37046, 37050, 37054, 37060, 37061, 37063, 37071, 37072, 37075, 37079, 37083, 37084, 37087, 37090, 37094, 37099, 37103, 37118, 37124, 37126, 37140, 37150, 37154, 37155, 37167, 37172, 37174, 37177, 37178, 37187, 37190, 37192, 38516, 38536, 38541, 38551, 38576 }, p2h("yideuh"));
    assertArrayEquals(new int[]{ 20134, 20159, 20740, 22869, 24328, 24441, 24518, 25014, 25233, 25494, 26131, 28082, 30123, 30410, 32377, 32462, 32716, 32764, 33099, 33222, 34612, 35695, 35793, 36870, 39515, 39551 }, p2h("yik"));
    assertArrayEquals(new int[]{ 20005, 20456, 20796, 20873, 21089, 21388, 21421, 22196, 22852, 23244, 25513, 26579, 28153, 28814, 28976, 29124, 30416, 32616, 33395, 33399, 38329, 38331, 38409, 38414, 39511, 39564, 40573 }, p2h("yim"));
    assertArrayEquals(new int[]{ 20822, 20823, 21693, 21761, 22181, 22576, 22925, 23267, 23476, 24310, 24358, 24421, 24422, 28046, 28270, 28436, 28895, 28937, 28982, 29017, 29123, 29141, 29616, 29694, 30740, 30746, 30831, 31605, 33005, 33335, 35328, 35340, 35344, 35349, 35382, 35393, 35398, 35400, 35406, 35410, 35436, 35438, 35440, 35445, 35455, 35460, 35462, 35473, 35474, 35482, 35510, 35522, 35529, 35533, 35535, 35537, 35547, 35550, 35574, 35578, 35580, 35606, 35624, 35635, 35673, 35710, 35740, 35742, 35750, 35751, 35754, 35764, 35765, 35778, 35779, 35787, 35790, 35794, 35795, 35796, 35798, 35800, 35804, 35807, 35808, 35812, 35822, 35827, 35830, 35833, 35836, 35839, 35840, 35844, 35847, 35852, 35862, 35866, 35869, 35871, 35872, 35873, 35883, 35887, 35891, 36066, 36132, 40756, 40761 }, p2h("yin"));
    assertArrayEquals(new int[]{ 20173, 20957, 21009, 22052, 22198, 22411, 23156, 23344, 23348, 24212, 24418, 24433, 25033, 26144, 27185, 27387, 28699, 29074, 29151, 29801, 30408, 32403, 32552, 33521, 33639, 33721, 33828, 33829, 34631, 34722, 34821, 35469, 35748, 36111, 36119, 36189, 36194, 36814, 37026, 40441, 40474, 40550, 40560 }, p2h("ying"));
    assertArrayEquals(new int[]{ 19994, 21494, 23421, 26989, 33865, 38913, 39029 }, p2h("yip"));
    assertArrayEquals(new int[]{ 22094, 28909, 29105, 33260, 35585, 35858 }, p2h("yit"));
    assertArrayEquals(new int[]{ 21510, 22575, 22829, 22934, 23002, 23046, 23304, 23591, 24493, 24508, 25200, 25622, 25671, 25854, 26332, 29796, 32350, 32469, 32768, 33136, 33280, 35201, 35616, 35875, 36953, 36965, 36992 }, p2h("yiu"));
    assertArrayEquals(new int[]{ 21727, 21815, 21938 }, p2h("yoh"));
    assertArrayEquals(new int[]{ 19982, 20083, 20104, 20110, 20251, 20313, 20446, 20660, 20754, 21505, 21947, 22149, 22914, 22948, 23067, 23089, 23418, 23431, 23507, 23679, 23786, 23996, 24481, 24840, 24841, 24858, 26044, 27014, 27741, 28132, 28180, 28189, 28417, 30060, 30066, 30208, 30290, 30402, 31161, 31162, 31404, 31411, 31485, 32701, 33278, 33281, 33286, 33287, 33593, 34398, 34837, 35029, 35465, 35486, 35565, 35709, 35821, 35861, 35947, 36671, 36802, 36926, 36935, 37539, 38135, 38533, 38632, 38633, 38928, 39044, 39077, 39192, 39341, 39533, 39695, 39770, 39796, 39824, 39826, 39834, 39838, 39850, 39851, 39853, 39872, 39873, 39892, 39894, 39895, 39899, 39905, 39906, 39908, 39911, 39915, 39920, 39944, 39945, 39949, 39954, 39971, 39973, 39976, 39977, 39985, 39987, 39991, 39993, 39998, 40008, 40013, 40018, 40020, 40022, 40039, 40045, 40055, 40058, 40060, 40066, 40069, 40070, 40071, 40075, 40080, 40081, 40082, 40084, 40085, 40090, 40091, 40094, 40096, 40097, 40098, 40099, 40101, 40102, 40103, 40109, 40112, 40113, 40114, 40115, 40116, 40117, 40118, 40119, 40122, 40123, 40124, 40125, 40132, 40133, 40134, 40135, 40138, 40139, 40142, 40143, 40144, 40147, 40148, 40149, 40152, 40153, 40156, 40157, 40159, 40162, 40812, 40818, 40841, 40843 }, p2h("yue"));
    assertArrayEquals(new int[]{ 20024, 20803, 20900, 21407, 21439, 21592, 21729, 22253, 22278, 22290, 22291, 23113, 23436, 23451, 24616, 24748, 24779, 24895, 25080, 26941, 27839, 28149, 28170, 28304, 28919, 29232, 29503, 29572, 30073, 30505, 32227, 32291, 32536, 33451, 33489, 34945, 36575, 36677, 36719, 36757, 36828, 36960, 37449, 37467, 38085, 38089, 38446, 38498, 39000, 40182, 40219, 40482, 40499 }, p2h("yuen"));
    assertArrayEquals(new int[]{ 20057, 21717, 22118, 24709, 24742, 26376, 31348, 31908, 31925, 36234, 37332, 37470, 38023, 38074, 38321, 38405 }, p2h("yuet"));
    assertArrayEquals(new int[]{ 30591, 33455, 34122, 35028, 37555, 38160 }, p2h("yui"));
    assertArrayEquals(new int[]{ 21014, 22605, 23221, 26093, 26161, 26378, 26384, 26389, 27442, 27603, 27779, 28020, 29425, 29508, 29577, 32905, 32924, 32927, 32939, 32941, 32945, 32946, 32951, 32956, 32957, 32962, 32973, 32983, 32985, 32989, 33000, 33001, 33002, 33003, 33009, 33010, 33020, 33038, 33042, 33048, 33051, 33054, 33068, 33074, 33078, 33096, 33100, 33113, 33114, 33120, 33121, 33127, 33133, 33140, 33148, 33149, 33154, 33155, 33187, 33190, 33194, 33211, 33217, 33228, 33242, 35109, 35930, 36785, 37057, 37434, 38064, 38922, 39036, 39729, 39739 }, p2h("yuk"));
    assertArrayEquals(new int[]{ 28070, 28516, 38287, 38384 }, p2h("yun"));
    assertArrayEquals(new int[]{ 20323, 20433, 20653, 20887, 21191, 21889, 21985, 23481, 24248, 24703, 25102, 25317, 25793, 27029, 28044, 28263, 28342, 29076, 29992, 29996, 30152, 30320, 32104, 32466, 32705, 33219, 33592, 33993, 34553, 34701, 36362, 36404, 37013, 37854, 38235, 38605 }, p2h("yung"));
    long stopTime = System.currentTimeMillis();
    System.out.println("278 Pinyin-to-Hanzi tests were passed. Time used: " + (stopTime - startTime) + " ms.");
  }

}
